import { useState } from "react";
import { useAccount } from 'wagmi'
import { parseEther } from "viem";
import { useScaffoldContractWrite } from "~~/hooks/scaffold-eth";
import { ConstellationFigures, SkyProjection, SkyProjectionPacker, StarNames } from "@SkyNft/sdk";
import apiResponse from "./api_response_0.json";

export const SkyNftTest = () => {
  const [newGreeting, setNewGreeting] = useState("");

  const account = useAccount();

    //account.isConnected

  console.log(apiResponse.latitude);
  const starNames = new StarNames();
  const constlFigures = new ConstellationFigures();
  const packer = new SkyProjectionPacker(constlFigures, starNames);
  const skyProjection = new SkyProjection(apiResponse, constlFigures);

  const { writeAsync, isLoading } = useScaffoldContractWrite({
    contractName: "SkyNft2",
    functionName: "mint",
    args: [
    account.address,
    ...packer.pack(skyProjection)
      // 23377558772184571606753643904n,
      // 204322628892767200781194342n,
      // "0xffffffffff0d00ffe7ffffbf0fff7fffffffe7ffffffffffffff630600817f00fcffffffe7ffffffffff9ffffffffffdff7ffcffffcfff0f00",
      // 6901746758167095436594728068578120005593339474076475568225370515963904n,
      // [
      //   304, 286, 355, 252,  58, 253,
      //   357, 256, 257, 260,  60, 154,
      //   135, 157, 162, 166, 144, 297,
      //   147, 375, 229, 179, 184, 186,
      //   241,  75, 339
      // ],
      // [2904560,2765303,2642382,2638300,2613741,2384350,2982727,3679063,3576712,3150521,3044089,2867919,2773703,2679542,2626264,2462329,2458292,2437862,2388605,2409207,2359947,2347686,2364133,2323096,2339568,2306679,2237054,2228885,2519620,2511421,2445875,2257448,1745851,1688483,1676160,631317,897463,696763,627146,819607,438747,963509,316320,2560370,2523529,2441597,2384262,2298237,2736395,2543880,2781494,2576695,2322726,426009,962616,933894,1757702,1774050,1753545,1622548,1614272,1548770,1381236,1332074,1258358,1217394,1213359,1094513,1061732,2957472,3018923,3829922,3227832,3551436,3363054,3203327,3510556,3539276,3473785,4120915,4067665,4075868,4030812,1836017,1646793,1728685,1826921,2080816,2240560,2306124,2388088,2715697,2658372,2687070,2830405,2400440,2576574,2445518,2539734,2618357,2499571,2446289,2376619,2372500,2339595,2269910,2270103,2245417,2167510,2151198,2147243,2077402,2069277,2020059,1995559,1983364,1979258,1815401,1782635,1717075,1745590,1716977,1700533,1655487,1573563,1557199,4178137,4104432,4067580,2323296,2192202,1430047,1376798,1339931,1294883,1225265,1274373,1159743,1327576,1139215,1212894,1028634,1081854,1126880,1143239,1073629,1004002,1049041,2097558,2064736,2036103,1933682,1986866,1078090,1094390,1000213,1000188,959209,873307,926407,865049,885480,820030,799541,807702,840412,758568,713514,635709,1483066,1179975,1151302,1474831,1204513,1368326,1245452,925954,880893,1290443,1433806,946364,1073295,1261715,1392776,1454178,1527875,1499146,4080588,3941360,3765187,3728341,2916370,1840038,451093,406051,377374,406024,385546,344577,152066,3182969,2883919,2933081,2957666,3039602,2904411,1274500,1196722,1208947,1110706,897657,631458,516709,1549086,1532639,1520376,1524453,1487590,1487585,1418001,1401599,1319706,1323754,1278735,1270501,1209063,483683,516432,201056,53622,360756,237884,86219,1696126,1606002,1409414,1167734,1040729,954718,885078,823644,3358789,3420240,3596368,3465312,3633249,1700481,1704568,1692295,1671830,1684081,1643162,1528523,1524349,1458845,1487464,1434273,1405603,1336012,1454641,1376879,1352289,1409582,1356358,1331783,1344062,2904560,3015220,3883477,3539335,3457442,3293571,3797512,3539468,3228079,3318224,3490313,3289550,3178954,3355144,1311734,2232823,2199976,2163124,2183670,2167276,2109893,2052558,2036243,1999381,1995248,1987075,4071843,4051371,4161994,4080074,893503,795208,835910,729374,733438,622810,3965089,3797215,2101507,2027680,2080911,2117814,2175148,2162899,2138350,3298255,3191737,3191725,2925520,2798513,2765793,2642888,3031643,2892395,2667004,2814573,2667040,2630166,2683517,2638417,2630275,2597490,2577041,2536085,3428947,3392101,3334728,3273299,3297898,3154519,4072271,3969821,3863380,3838777,963509,914431,676737,598973,463635,316320,320264,2118270,2011704,1950316,1864284,1856083,1843793,1831499,1823322,1794646,1782327,1622548,1532466,2478613,2396672,2368006,3936814,4137621,3969645,3842628,3777090,3904142,3732040,3793584,3707527,3773124,3703540,3560095,3597041,304115]
    ],
    value: parseEther("0"),
    onBlockConfirmation: txnReceipt => {
      console.log("ðŸ“¦ Transaction blockHash", txnReceipt.blockHash);
    },
  });

  return (
    <>
        {account.address}<br/>
        {account.status}<br/>
      <input
        type="text"
        placeholder="Write your greeting"
        className="input border border-primary"
        onChange111={e => setNewGreeting(e.target.value)}
      />
      <button className="btn btn-primary" onClick={() => writeAsync()} disabled={isLoading}>
        {isLoading ? <span className="loading loading-spinner loading-sm"></span> : <>Send</>}
      </button>
    </>
  );
};